{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport * as fs from 'fs';\nimport {FileNotFoundException} from \"./exceptions/FileNotFoundException\";\nimport {ResultFileEmptyException} from \"./exceptions/ResultFileEmptyException\";\nimport axios from \"axios\";\nimport * as console from \"console\";\nimport {InvalidDataException} from \"./exceptions/InvalidDataException\";\nimport * as Sentry from \"@sentry/node\";\nimport { ProfilingIntegration } from \"@sentry/profiling-node\";\n\nSentry.init({\n    dsn: \"https://f70bc503be4cf0bcc9ffc284ecf42bc6@o4504350151081984.ingest.sentry.io/4506503849967616\",\n    integrations: [\n        new ProfilingIntegration(),\n    ],\n    // Performance Monitoring\n    tracesSampleRate: 1.0, //  Capture 100% of the transactions\n    // Set sampling rate for profiling - this is relative to tracesSampleRate\n    profilesSampleRate: 1.0,\n});\n\nconst transaction = Sentry.startTransaction({\n    op: \"test\",\n    name: \"My First Test Transaction\",\n});\n\nsetTimeout(() => {\n    try {\n        foo();\n    } catch (e) {\n        Sentry.captureException(e);\n    } finally {\n        transaction.finish();\n    }\n}, 99);\n\nconst yargs = require(\"yargs\");\n\nconst fileToBase64 = (filePath: string) => {\n    const fileBuffer = fs.readFileSync(filePath);\n    const base64Data = fileBuffer.toString('base64');\n    return base64Data;\n}\n\nconst sendRequest = async (data: any) => {\n    const url = 'http://test-track.home.com/backend/api/automated-test-run';\n\n    const headers = {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    }\n\n    try\n    {\n        return await axios.post(url, data, {headers: headers});\n    }\n    catch (err)\n    {\n        throw err;\n    }\n}\n\n\nconst options = yargs\n    .usage(\"Usage: --api-key <API Key> --project-id <Project ID>\")\n    .option(\"key\", { alias: \"api-key\", describe: \"Company API Key\", type: \"string\", demandOption: true })\n    .option(\"id\", {alias: \"project-id\", describe: \"Project id you are submitting the automated test run against\", type: \"string\", demandOption: true})\n    .option(\"file\", {alias: \"file\", description: \"JUnit XML File path\", demandOption: true})\n    .argv;\n\nconst apiKey = options['api-key'];\nconst projectId = options['project-id'];\nconst file = options.file;\n\n\n\ntry\n{\n    if (apiKey.length === 0)\n    {\n        throw new InvalidDataException(\"api-key\");\n    }\n    else if (projectId.length === 0)\n    {\n        throw new InvalidDataException(\"project-id\")\n    }\n    else if (file.length === 0)\n    {\n        throw new InvalidDataException(\"file\");\n    }\n\n    if (!fs.existsSync(file))\n    {\n        throw new FileNotFoundException(file);\n    }\n\n    const base64 = fileToBase64(file);\n    if (base64.length === 0)\n    {\n        throw new ResultFileEmptyException(file);\n    }\n\n    const data = {\n        project_id: projectId,\n        file_content: base64\n    }\n\n    sendRequest(data).then(response => {\n        //We should get no other response here other than 200 OK. Any 4xx or 5xx errors\n        //are caught by the catch handler\n        if (response.status === 200)\n        {\n            console.info(\"Successfully submitted automated test run\");\n            console.info(\"Your test run is added to a queue and you should see the results shortly\")\n            console.info(\"An email notification will be sent once your test run has been processed\");\n        }\n        else\n        {\n            console.log(`Received unexpected response code: ${response.status}: ${response.statusText}`);\n            console.log(\"If you continue to see this, please raise a support ticket at https://support.devso.io and include the information below\");\n            console.log(`Status Code: ${response.status} - ${response.statusText}`);\n            console.log(response.data);\n        }\n    }).catch(err => {\n        console.error(\"An unexpected error occurred submitting the automated test run to Test Track\");\n        console.error(\"If you continue to see this problem, please raise a support ticket at https://support.devso.io with the details outputted below\")\n        console.error(\"Status: \" + err.response.status + \": \" + err.response.statusText);\n        console.error(\"Err\", err.response.data);\n    });\n}\ncatch (err)\n{\n    if (err instanceof FileNotFoundException)\n    {\n        console.error(err.message);\n    }\n    else if (err instanceof ResultFileEmptyException)\n    {\n        console.error(err.message);\n    }\n    else if (err instanceof InvalidDataException)\n    {\n        console.error(err.message);\n    }\n    else\n    {\n        console.error(\"An unexpected error has occurred submitted your automated test run to Test Track\");\n        console.error(\"If you continue to see this error, please raise a support ticket at https://support.devso.io with the output below\");\n        console.error(\"An exception has occurred\", err);\n    }\n}\n\n"]}